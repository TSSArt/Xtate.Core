<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ErrorMessage_AssignItemContentAndExpressionMissed" xml:space="preserve">
    <value>Expression or Inline content should be specified in Assign element.</value>
  </data>
  <data name="ErrorMessage_AssignItemContentAndExpressionSpecified" xml:space="preserve">
    <value>Expression and Inline content can't be used at the same time in Assign element.</value>
  </data>
  <data name="ErrorMessage_AssignItemLocationMissed" xml:space="preserve">
    <value>Location missed in Assign element.</value>
  </data>
  <data name="ErrorMessage_CancelItemSendIdAndExpressionMissed" xml:space="preserve">
    <value>SendId or SendIdExpression should be specified in Cancel element.</value>
  </data>
  <data name="ErrorMessage_CancelItemSendIdAndExpressionSpecified" xml:space="preserve">
    <value>SendId and SendIdExpression can't be used at the same time in Cancel element.</value>
  </data>
  <data name="Exception_ConditionDoesNotSpecified" xml:space="preserve">
    <value>Condition does not specified.</value>
  </data>
  <data name="Exception_LocationDoesNotSpecified" xml:space="preserve">
    <value>Location does not specified.</value>
  </data>
  <data name="Exception_ListOfLocationsCannotBeEmpty" xml:space="preserve">
    <value>List of locations cannot be empty.</value>
  </data>
  <data name="Exception_ValueCannotBeNullOrEmpty" xml:space="preserve">
    <value>Value cannot be null or empty.</value>
  </data>
  <data name="ErrorMessage_ScriptingNotSupportedInRuntimeDataModel" xml:space="preserve">
    <value>Scripting not supported in 'runtime' data model.</value>
  </data>
  <data name="ErrorMessage_DataModelNotSupportedInRuntime" xml:space="preserve">
    <value>DataModel not supported in 'runtime' data model.</value>
  </data>
  <data name="ErrorMessage_RuntimeActionAndPredicateOnlyAllowed" xml:space="preserve">
    <value>RuntimeAction and RuntimePredicate objects only allowed as action and condition in 'runtime' data model.</value>
  </data>
  <data name="Exception_CustomActionDoesNotSupported" xml:space="preserve">
    <value>Custom action does not supported.</value>
  </data>
  <data name="Exception_ValueCannotBeEmptyList" xml:space="preserve">
    <value>Value cannot be empty list.</value>
  </data>
  <data name="ErrorMessage_ExpressionAndBodyMissedInContent" xml:space="preserve">
    <value>Expression or Body should be specified in Content element.</value>
  </data>
  <data name="ErrorMessage_ExpressionAndBodySpecifiedInContent" xml:space="preserve">
    <value>Expression and Body can't be used at the same time in Content element.</value>
  </data>
  <data name="Exception_SendIdIsEmpty" xml:space="preserve">
    <value>SendId is empty.</value>
  </data>
  <data name="Exception_ListOfIdentifiersCannotBeEmpty" xml:space="preserve">
    <value>List of identifiers cannot be empty.</value>
  </data>
  <data name="Exception_ListOfEventsCannotBeEmpty" xml:space="preserve">
    <value>List of events cannot be empty.</value>
  </data>
  <data name="ErrorMessage_InitialAttributeAndInitialStateCantBeUsedAtTheSameTimeInStateElement" xml:space="preserve">
    <value>Initial attribute and Initial state can't be used at the same time in State element.</value>
  </data>
  <data name="Exception_ValueCannotBeAnEmptyCollection" xml:space="preserve">
    <value>Value cannot be an empty collection.</value>
  </data>
  <data name="Exception_ValueCannotBeAnEmptyList" xml:space="preserve">
    <value>Value cannot be an empty list.</value>
  </data>
  <data name="ErrorMessage_XmlCannotBeNull" xml:space="preserve">
    <value>Xml cannot be null.</value>
  </data>
  <data name="Exception_ValueCantBeEmpty" xml:space="preserve">
    <value>Value can't be empty.</value>
  </data>
  <data name="Exception_StreamShouldSupportReadWriteSeekOperations" xml:space="preserve">
    <value>Stream should support Read, Write, Seek operations.</value>
  </data>
  <data name="Exception_IdentifierCannotContainsWhitespace" xml:space="preserve">
    <value>Identifier cannot contains whitespace.</value>
  </data>
  <data name="Exception_TypeCantBeFound" xml:space="preserve">
    <value>Type '{0}' can't be found in type '{1}' or in its ancestors.</value>
  </data>
  <data name="ErrorMessage_SendidAttributeCantBeEmptyInCancelElement" xml:space="preserve">
    <value>Sendid attribute can't be empty in Cancel element.</value>
  </data>
  <data name="ErrorMessage_ConditionExpressionCantBeNull" xml:space="preserve">
    <value>Condition expression can't be null.</value>
  </data>
  <data name="ErrorMessage_LocationExpressionCantBeNull" xml:space="preserve">
    <value>Location expression can't be null.</value>
  </data>
  <data name="ErrorMessage_ScriptExpressionCantBeNull" xml:space="preserve">
    <value>Script expression can't be null.</value>
  </data>
  <data name="ErrorMessage_ContentValueCantBeNull" xml:space="preserve">
    <value>Content value can't be null.</value>
  </data>
  <data name="ErrorMessage_IdPropertyRequiredInDataElement" xml:space="preserve">
    <value>Id property required in Data element.</value>
  </data>
  <data name="ErrorMessage_ExpressionSourceInData" xml:space="preserve">
    <value>Expression and Source and Inline content can't be used at the same time in Data element.</value>
  </data>
  <data name="ErrorMessage_ConditionRequiredForElseIf" xml:space="preserve">
    <value>Condition property required for ElseIf element.</value>
  </data>
  <data name="ErrorMessage_RaiseCantBeUsedInFinalizeElement" xml:space="preserve">
    <value>Raise can't be used in Finalize element.</value>
  </data>
  <data name="ErrorMessage_SendCantBeUsedInFinalizeElement" xml:space="preserve">
    <value>Send can't be used in Finalize element.</value>
  </data>
  <data name="ErrorMessage_ArrayPropertyRequiredForForEach" xml:space="preserve">
    <value>Array property required for ForEach element</value>
  </data>
  <data name="ErrorMessage_ConditionRequiredForForEach" xml:space="preserve">
    <value>Condition property required for ForEach element.</value>
  </data>
  <data name="ErrorMessage_TransitionMustBePresentInHistoryElement" xml:space="preserve">
    <value>Transition must be present in History element.</value>
  </data>
  <data name="ErrorMessage_InvalidTypeValueInHistoryElement" xml:space="preserve">
    <value>Invalid Type value in History element.</value>
  </data>
  <data name="ErrorMessage_ConditionRequiredForIf" xml:space="preserve">
    <value>Condition property required for If element.</value>
  </data>
  <data name="ErrorMessage_ElseifCannotFollowElse" xml:space="preserve">
    <value>&lt;elseif&gt; can not follow &lt;else&gt;.</value>
  </data>
  <data name="ErrorMessage_ElseCanBeUsedOnlyOnce" xml:space="preserve">
    <value>&lt;else&gt; can be used only once.</value>
  </data>
  <data name="ErrorMessage_TransitionMustBePresentInInitialElement" xml:space="preserve">
    <value>Transition must be present in Initial element.</value>
  </data>
  <data name="ErrorMessage_TypeOrTypeExpressionMustBeSpecifiedInInvokeElement" xml:space="preserve">
    <value>Type or TypeExpression must be specified in Invoke element.</value>
  </data>
  <data name="ErrorMessage_TypeAndTypeExpressionCantBeUsedAtTheSameTimeInInvokeElement" xml:space="preserve">
    <value>Type and TypeExpression can't be used at the same time in Invoke element.</value>
  </data>
  <data name="ErrorMessage_IdAndIdLocationCantBeUsedAtTheSameTimeInInvokeElement" xml:space="preserve">
    <value>Id and IdLocation can't be used at the same time in Invoke element.</value>
  </data>
  <data name="ErrorMessage_SourceAndSourceExpressionCantBeUsedAtTheSameTimeInInvokeElement" xml:space="preserve">
    <value>Source and SourceExpression can't be used at the same time in Invoke element.</value>
  </data>
  <data name="ErrorMessage_NameListAndParametersCantBeUsedAtTheSameTimeInInvokeElement" xml:space="preserve">
    <value>NameList and Parameters can't be used at the same time in Invoke element.</value>
  </data>
  <data name="ErrorMessage_NameAttributesRequiredInParamElement" xml:space="preserve">
    <value>Name attributes required in Param element.</value>
  </data>
  <data name="ErrorMessage_ExpressionLocationInParam" xml:space="preserve">
    <value>Expression and Location can't be used at the same time in Param element.</value>
  </data>
  <data name="ErrorMessage_EventRequiredForRaise" xml:space="preserve">
    <value>Event property required for Raise element.</value>
  </data>
  <data name="ErrorMessage_SourceAndBodyCantBeUsedAtTheSameTimeInAssignElement" xml:space="preserve">
    <value>Source and Body can't be used at the same time in Assign element.</value>
  </data>
  <data name="ErrorMessage_EvenExpressionContentInSend" xml:space="preserve">
    <value>Event, EventExpression and Content can't be used at the same time in Send element.</value>
  </data>
  <data name="ErrorMessage_TargetAndTargetExpressionCantBeUsedAtTheSameTimeInSendElement" xml:space="preserve">
    <value>Target and TargetExpression can't be used at the same time in Send element.</value>
  </data>
  <data name="ErrorMessage_TypeAndTypeExpressionCantBeUsedAtTheSameTimeInSendElement" xml:space="preserve">
    <value>Type and TypeExpression can't be used at the same time in Send element.</value>
  </data>
  <data name="ErrorMessage_IdAndIdLocationCantBeUsedAtTheSameTimeInSendElement" xml:space="preserve">
    <value>Id and IdLocation can't be used at the same time in Send element.</value>
  </data>
  <data name="ErrorMessage_EventExpressionInSend" xml:space="preserve">
    <value>Event and EventExpression can't be used at the same time in Send element.</value>
  </data>
  <data name="ErrorMessage_NameListAndContentCantBeUsedAtTheSameTimeInSendElement" xml:space="preserve">
    <value>NameList and Content can't be used at the same time in Send element.</value>
  </data>
  <data name="ErrorMessage_ParametersAndContentCantBeUsedAtTheSameTimeInSendElement" xml:space="preserve">
    <value>Parameters and Content can't be used at the same time in Send element.</value>
  </data>
  <data name="ErrorMessage_MustBePresentEventOrEventExpressionOrContentInSendElement" xml:space="preserve">
    <value>Must be present Event or EventExpression or Content in Send element.</value>
  </data>
  <data name="ErrorMessage_InitialStatePropertyCannotBeUsedWithoutAnyStates" xml:space="preserve">
    <value>Initial state/property cannot be used without any states.</value>
  </data>
  <data name="ErrorMessage_InvalidBindingTypeValueInStateMachineElement" xml:space="preserve">
    <value>Invalid BindingType value in StateMachine element.</value>
  </data>
  <data name="ErrorMessage_InitialStatePropertyCanBeUsedOnlyInComplexStates" xml:space="preserve">
    <value>Initial state/property can be used only in complex (compound) states.</value>
  </data>
  <data name="ErrorMessage_MustBePresentAtLeastEventOrConditionOrTargetInTransitionElement" xml:space="preserve">
    <value>Must be present at least Event or Condition or Target in Transition element.</value>
  </data>
  <data name="Exception_ValueCannotBeParsed" xml:space="preserve">
    <value>Value cannot be parsed for type {0}.</value>
  </data>
  <data name="Exception_DelayParsingError" xml:space="preserve">
    <value>Delay parsing error. Format is ###0(ms|s).</value>
  </data>
  <data name="Exception_UnsupportedScxmlVersion" xml:space="preserve">
    <value>Unsupported SCXML version.</value>
  </data>
  <data name="ErrorMessage_FailureContentProcessing" xml:space="preserve">
    <value>Failure on raw content processing.</value>
  </data>
  <data name="ErrorMessage_FailureAttributeProcessing" xml:space="preserve">
    <value>Failure on attribute processing.</value>
  </data>
  <data name="ErrorMessage_FailureElementProcessing" xml:space="preserve">
    <value>Failure on element processing.</value>
  </data>
  <data name="ErrorMessage_ExpectedElementNotFound" xml:space="preserve">
    <value>Expected element '{0}' was not found.</value>
  </data>
  <data name="ErrorMessage_FoundDuplicateAttribute" xml:space="preserve">
    <value>Found duplicate attribute '{0}'.</value>
  </data>
  <data name="ErrorMessage_MissedRequiredAttributes" xml:space="preserve">
    <value>Missed required attributes '{0}'.</value>
  </data>
  <data name="ErrorMessage_OnlyOneElementAllowed" xml:space="preserve">
    <value>Only one &lt;{0}&gt; element allowed.</value>
  </data>
  <data name="ErrorMessage_DetectedUnknownElement" xml:space="preserve">
    <value>Detected unknown element &lt;{0}&gt;.</value>
  </data>
  <data name="ErrorMessage_MissedRequiredElements" xml:space="preserve">
    <value>Missed required elements &lt;{0}&gt;.</value>
  </data>
  <data name="Exception_CanNotRegisterRawContentMoreThanOneTime" xml:space="preserve">
    <value>Can not register raw content more than one time.</value>
  </data>
  <data name="Exception_CanNotReadRawContentDueToRegisteredElements" xml:space="preserve">
    <value>Can not read raw content due to registered elements.</value>
  </data>
  <data name="Exception_CanNotRegisterComponentDueToRegisteredRawContent" xml:space="preserve">
    <value>Can not register component due to registered raw content.</value>
  </data>
  <data name="Exception_UnsupportedObjectType" xml:space="preserve">
    <value>Unsupported object type.</value>
  </data>
  <data name="Exception_DataModelValueIsNotDateTime" xml:space="preserve">
    <value>DataModelValue is not DateTime.</value>
  </data>
  <data name="Exception_DataModelValueIsNotBoolean" xml:space="preserve">
    <value>DataModelValue is not Boolean.</value>
  </data>
  <data name="Exception_DataModelValueIsNotNumber" xml:space="preserve">
    <value>DataModelValue is not Number.</value>
  </data>
  <data name="Exception_DataModelValueIsNotString" xml:space="preserve">
    <value>DataModelValue is not String.</value>
  </data>
  <data name="Exception_ObjectCanNotBeModified" xml:space="preserve">
    <value>Object can not be modified.</value>
  </data>
  <data name="Exception_AssertionFailed" xml:space="preserve">
    <value>Assertion failed.</value>
  </data>
  <data name="Exception_UnexpectedValue" xml:space="preserve">
    <value>Unexpected value.</value>
  </data>
  <data name="Exception_ExternalCommunicationDoesNotConfiguredForStateMachineInterpreter" xml:space="preserve">
    <value>External communication does not configured for state machine interpreter.</value>
  </data>
  <data name="Exception_CantFindDataModelHandlerFactoryForDataModelType" xml:space="preserve">
    <value>Can't find DataModelHandlerFactory for DataModel type '{0}'.</value>
  </data>
  <data name="Exception_PersistedStateCantBeReadUnsupportedVersion" xml:space="preserve">
    <value>Persisted state can't be read. Unsupported version.</value>
  </data>
  <data name="Exception_PersistedStateCantBeReadStoredAndProvidedSessionIdsDoesNotMatch" xml:space="preserve">
    <value>Persisted state can't be read. Stored and provided SessionIds does not match.</value>
  </data>
  <data name="Exception_PartitionArgumentShouldBeNull" xml:space="preserve">
    <value>Partition argument should be null.</value>
  </data>
  <data name="Assertion_ObjectsStructureMismatch" xml:space="preserve">
    <value>Objects structure mismatch.</value>
  </data>
  <data name="ErrorMessage_ValueExpressionDoesNotImplementIValueEvaluator" xml:space="preserve">
    <value>'Value expression' does not implement IValueEvaluator.</value>
  </data>
  <data name="ErrorMessage_LocationExpressionDoesNotImplementILocationEvaluator" xml:space="preserve">
    <value>'Location expression' does not implement ILocationEvaluator.</value>
  </data>
  <data name="Assertion_CustomActionDoesNotConfigured" xml:space="preserve">
    <value>Custom action does not configured.</value>
  </data>
  <data name="ErrorMessage_ForEachNotSupportedForNull" xml:space="preserve">
    <value>ForEach not supported in NULL data model.</value>
  </data>
  <data name="ErrorMessage_ScriptingNotSupportedForNull" xml:space="preserve">
    <value>Scripting not supported in NULL data model.</value>
  </data>
  <data name="ErrorMessage_DataModelNotSupportedForNull" xml:space="preserve">
    <value>DataModel not supported in NULL data model.</value>
  </data>
  <data name="ErrorMessage_DoneDataNotSupportedForNull" xml:space="preserve">
    <value>DoneData not supported in NULL data model.</value>
  </data>
  <data name="ErrorMessage_ValueExpressionNotSupportedForNull" xml:space="preserve">
    <value>'Value expression' not supported in NULL data model.</value>
  </data>
  <data name="ErrorMessage_LocationExpressionNotSupportedForNull" xml:space="preserve">
    <value>'Location expression' not supported in NULL data model.</value>
  </data>
  <data name="ErrorMessage_IncorrectConditionExpressionForNull" xml:space="preserve">
    <value>Incorrect format of condition expression for NULL data model.</value>
  </data>
  <data name="ErrorMessage_IncorrectConditionExpression" xml:space="preserve">
    <value>Incorrect condition expression.</value>
  </data>
  <data name="Exception_InvalidTypeInfoValue" xml:space="preserve">
    <value>Invalid TypeInfo value.</value>
  </data>
  <data name="ErrorMessage_TargetIdDoesNotExists" xml:space="preserve">
    <value>Target Id does not exists.</value>
  </data>
  <data name="Exception_StateIdNotInitialized" xml:space="preserve">
    <value>StateId not initialized.</value>
  </data>
  <data name="Exception_CantRestoreElement" xml:space="preserve">
    <value>Can't restore element.</value>
  </data>
  <data name="Exception_RootPathCanBeSetOnlyBeforeVisiting" xml:space="preserve">
    <value>Root path can be set only before visiting.</value>
  </data>
  <data name="Exception_IncorrectDataFormat" xml:space="preserve">
    <value>Incorrect data format.</value>
  </data>
  <data name="Exception_ForwardEntitiesRequiredToRestoreStateMachine" xml:space="preserve">
    <value>Forward entities required to restore state machine.</value>
  </data>
  <data name="Exception_ForwardEntityCanNotBeFound" xml:space="preserve">
    <value>Forward entity can not be found.</value>
  </data>
  <data name="Exception_ForwardEntityHasIncorrectType" xml:space="preserve">
    <value>Forward entity has incorrect type.</value>
  </data>
  <data name="Exception_MissedParentSessionId" xml:space="preserve">
    <value>Missed ParentSessionId.</value>
  </data>
  <data name="Exception_InvokedServiceMetaMissedInvokeId" xml:space="preserve">
    <value>Missed InvokeId.</value>
  </data>
  <data name="Exception_MissedSessionId" xml:space="preserve">
    <value>Missed SessionId.</value>
  </data>
  <data name="Exception_UnexpectedTypeInfoValue" xml:space="preserve">
    <value>Unexpected TypeInfo value.
</value>
  </data>
  <data name="Exception_UnknownConditionType" xml:space="preserve">
    <value>Unknown Condition type.</value>
  </data>
  <data name="Exception_UnknownExecutableEntityType" xml:space="preserve">
    <value>Unknown Executable Entity type.</value>
  </data>
  <data name="Exception_UnknownStateEntityType" xml:space="preserve">
    <value>Unknown State Entity type.</value>
  </data>
  <data name="Exception_StorageNotAvailableForReadOperations" xml:space="preserve">
    <value>Storage not available for read operations</value>
  </data>
  <data name="Exception_IncorrectEncoding" xml:space="preserve">
    <value>Incorrect encoding.</value>
  </data>
  <data name="Exception_CannotFindTarget" xml:space="preserve">
    <value>Cannot find target.</value>
  </data>
  <data name="Exception_ChannelCantConsumePreviouslyPersistedObject" xml:space="preserve">
    <value>Channel can't consume previously persisted object.</value>
  </data>
  <data name="Exception_UseReadAsyncInstead" xml:space="preserve">
    <value>Use ReadAsync() instead.</value>
  </data>
  <data name="Exception_UseWriteAsyncInstead" xml:space="preserve">
    <value>Use WriteAsync() instead.</value>
  </data>
  <data name="Exception_ItemCantBeNull" xml:space="preserve">
    <value>Item can't be null.</value>
  </data>
  <data name="Exception_KeyNotFound" xml:space="preserve">
    <value>'{0}' key not found.</value>
  </data>
  <data name="Exception_TargetShouldBeEqualToParentOrNull" xml:space="preserve">
    <value>Target should be equal to 'Parent' or null.</value>
  </data>
  <data name="Exception_TypeSendIdDelayMsCantBeSpecifiedForThisEvent" xml:space="preserve">
    <value>Type, SendId, DelayMs can't be specified for this event.</value>
  </data>
  <data name="Exception_InvalidType" xml:space="preserve">
    <value>Invalid type.</value>
  </data>
  <data name="Exception_AnotherAsynchronousOperationInProgress" xml:space="preserve">
    <value>Another asynchronous operation in progress.</value>
  </data>
  <data name="Exception_IOProcessorHasNotBeenStarted" xml:space="preserve">
    <value>IO Processor has not been started.</value>
  </data>
  <data name="Exception_EventTargetDidNotSpecified" xml:space="preserve">
    <value>Event Target did not specified.</value>
  </data>
  <data name="Exception_InternalEventsCantBeDelayed" xml:space="preserve">
    <value>Internal events can't be delayed.</value>
  </data>
  <data name="Exception_StateMachineHostStopped" xml:space="preserve">
    <value>StateMachineHost stopped.</value>
  </data>
  <data name="Exception_InvalidInvokeId" xml:space="preserve">
    <value>Invalid InvokeId.</value>
  </data>
  <data name="DefaultLogger_LogInfo" xml:space="preserve">
    <value>Name: [{0}]. SessionId: [{1}]. Message: "{2}". Arguments: {3} Exception: {4}</value>
  </data>
  <data name="DefaultLogger_LogError" xml:space="preserve">
    <value>Type: [{0}]. Name: [{1}]. SessionId: [{2}]. SourceEntityId: [{3}]. Exception: {4}</value>
  </data>
  <data name="DefaultLogger_TraceEnteringState" xml:space="preserve">
    <value>Entering to state: [{0}]. SessionId: [{1}].</value>
  </data>
  <data name="DefaultLogger_TraceEnteredState" xml:space="preserve">
    <value>Entered to state: [{0}]. SessionId: [{1}].</value>
  </data>
  <data name="DefaultLogger_TraceExitingState" xml:space="preserve">
    <value>Exiting from state: [{0}]. SessionId: [{1}].</value>
  </data>
  <data name="DefaultLogger_TraceExitedState" xml:space="preserve">
    <value>Exited from state: [{0}]. SessionId: [{1}].</value>
  </data>
  <data name="DefaultLogger_TracePerformingTransition" xml:space="preserve">
    <value>Performing {0} transition to: [{1}]. Event: [{2}]. SessionId: [{3}].</value>
  </data>
  <data name="DefaultLogger_TracePerformedTransition" xml:space="preserve">
    <value>Performed {0} transition to: [{1}]. Event: [{2}]. SessionId: [{3}].</value>
  </data>
  <data name="DefaultLogger_TraceProcessingEvent" xml:space="preserve">
    <value>Processing {0} event [{1}]. SendId: [{2}]. InvokeId: [{3}]. Data: [{4}]. OriginType: [{5}]. Origin: [{6}]. SessionId: [{7}].</value>
  </data>
  <data name="Exception_StateMachineValidationExceptionMessage" xml:space="preserve">
    <value>Message #{0} of {1}: {2}</value>
  </data>
  <data name="Exception_SpecifiedMethodIsNotSupportedInType" xml:space="preserve">
    <value>Specified method is not supported in type {0}.</value>
  </data>
  <data name="Exception_UnsupportedType" xml:space="preserve">
    <value>Unsupported {0} type: [{1}].</value>
  </data>
  <data name="Exception_StateMachineExternalQueueHasBeenClosed" xml:space="preserve">
    <value>State Machine external queue has been closed.</value>
  </data>
  <data name="Exception_StateMachineHasBeenHalted" xml:space="preserve">
    <value>State Machine has been halted.</value>
  </data>
  <data name="Exception_StateMachineHasBeenDestroyed" xml:space="preserve">
    <value>State Machine has been destroyed.</value>
  </data>
  <data name="Exception_StateMachineHasBeenSuspended" xml:space="preserve">
    <value>State Machine has been suspended.</value>
  </data>
  <data name="Exception_CannotFindResourceLoaderToLoadExternalResource" xml:space="preserve">
    <value>Cannot find ResourceLoader to load external resource.</value>
  </data>
  <data name="Exception_ErrorOnEventConsumerSide" xml:space="preserve">
    <value>Error on event consumer side. Exception message: {0}.
{1}</value>
  </data>
  <data name="Exception_NamedPipeIoProcessorWithNameAlreadyHasBeenRegistered" xml:space="preserve">
    <value>NamedPipeIoProcessor with name '{0}' already has been registered.</value>
  </data>
  <data name="Exception_AccessCantBeChanged" xml:space="preserve">
    <value>Access can't be changed.</value>
  </data>
  <data name="Exception_RegistrationShouldNoOccurAfterInitialization" xml:space="preserve">
    <value>Registration should no occur after initialization.</value>
  </data>
  <data name="Exception_CantGetAccessToIHostInterface" xml:space="preserve">
    <value>Can't get access to IHost interface.</value>
  </data>
  <data name="ErrorMessage_ErrorOnCreationCustomActionExecutor" xml:space="preserve">
    <value>Error on creation CustomAction executor.</value>
  </data>
  <data name="ErrorMessage_UrlAndUrlExprAttributesShouldNotBeAssignedInStartElement" xml:space="preserve">
    <value>[url] and [urlExpr] attributes should not be assigned in Start element.</value>
  </data>
  <data name="ErrorMessage_UrlHasInvalidURIFormat" xml:space="preserve">
    <value>[url] has invalid URI format.</value>
  </data>
  <data name="ErrorMessage_AtLeastOneUrlMustBeSpecified" xml:space="preserve">
    <value>At least one attribute url or urlExpr must be specified</value>
  </data>
  <data name="Exception_StartActionExecuteSourceNotSpecified" xml:space="preserve">
    <value>Source not specified.</value>
  </data>
  <data name="ErrorMessage_CustomActionExecutorCantBeFound" xml:space="preserve">
    <value>Custom action executor can't be found.</value>
  </data>
  <data name="Exception_StateMachineOriginMissed" xml:space="preserve">
    <value>StateMachine origin missed.</value>
  </data>
  <data name="Exception_ValueIsNotSCXML" xml:space="preserve">
    <value>Value is not SCXML.</value>
  </data>
  <data name="Exception_ValueIsNotSource" xml:space="preserve">
    <value>Value is not Source.</value>
  </data>
  <data name="Exception_ValueIsNotStateMachine" xml:space="preserve">
    <value>Value is not StateMachine.</value>
  </data>
  <data name="Exception_ResourceNotFound" xml:space="preserve">
    <value>Resource '{0}' not found.</value>
  </data>
  <data name="Exception_UnhandledException" xml:space="preserve">
    <value>Unhandled exception.</value>
  </data>
  <data name="DefaultLogger_TraceInterpreterState" xml:space="preserve">
    <value>Interpreter state has changed to [{0}]. SessionId: [{1}].</value>
  </data>
  <data name="Exception_ArgumentMustBeDataModelDateTimeType" xml:space="preserve">
    <value>Argument must be DataModelDateTime type.</value>
  </data>
  <data name="ErrorMessage_ScriptingNotSupportedInXPATHDataModel" xml:space="preserve">
    <value>Scripting not supported in XPATH data model.</value>
  </data>
  <data name="Exception_ErrorOnParsingXPathExpression" xml:space="preserve">
    <value>Error on parsing XPath expression.</value>
  </data>
  <data name="Exception_ResultOfXPathExpressionCantBeIdentified" xml:space="preserve">
    <value>Result of XPath expression can't be identified.</value>
  </data>
  <data name="Exception_ValueExpressionMustBePresent" xml:space="preserve">
    <value>Value Expression must be present.</value>
  </data>
  <data name="Exception_ResultOfXPathExpressionShouldBeBooleanValue" xml:space="preserve">
    <value>Result of XPath expression should be boolean value.</value>
  </data>
  <data name="Exception_ResultOfXPathExpressionShouldBeElement" xml:space="preserve">
    <value>Result of XPath expression should be element.</value>
  </data>
  <data name="Exception_DestinationArrayIsNotLongEnough" xml:space="preserve">
    <value>Destination list is not long enough to copy all the items in the collection. Check list index and length.</value>
  </data>
  <data name="Exception_IndexShouldBeNonNegativeAndLessThenAarraySize" xml:space="preserve">
    <value>Index should be non-negative and less then array size.</value>
  </data>
  <data name="Exception_IndexValueMustBeNonNegativeInteger" xml:space="preserve">
    <value>Index value must be non-negative integer.</value>
  </data>
  <data name="Exception_UnknownXPathFunction" xml:space="preserve">
    <value>Unknown XPath function. Namespace:'{0}', Name:'{1}'.</value>
  </data>
  <data name="Exception_UnknownXPathVariable" xml:space="preserve">
    <value>Unknown XPath variable. Namespace:'{0}', Name:'{1}'.</value>
  </data>
  <data name="Exception_ValueMustBeNonNegativeInteger" xml:space="preserve">
    <value>Value must be non negative integer.</value>
  </data>
  <data name="Exception_DataModelValueIsNotDataModelList" xml:space="preserve">
    <value>DataModelValue is not DataModelList.</value>
  </data>
  <data name="Exception_UnexpectedTypeAttributeValue" xml:space="preserve">
    <value>Unexpected type attribute value: {0}.</value>
  </data>
  <data name="ErrorMessage_AttrAttributeShouldNotBeEmpty" xml:space="preserve">
    <value>'attr' attribute should not be empty.</value>
  </data>
  <data name="Exception_PrefixCantBeResolved" xml:space="preserve">
    <value>Prefix {0} can't be resolved.</value>
  </data>
  <data name="ErrorMessage_SessionIdCouldNotBeEmpty" xml:space="preserve">
    <value>[sessionId] could not be empty.</value>
  </data>
  <data name="ErrorMessage_SessionIdAndSessionIdExprAttributesShouldNotBeAssignedInStartElement" xml:space="preserve">
    <value>[sessionId] and [sessionIdExpr] attributes should not be assigned in Start element.</value>
  </data>
  <data name="Exception_SessionIdCouldNotBeEmpty" xml:space="preserve">
    <value>SessionId could not be empty.</value>
  </data>
  <data name="DefaultLogger_TraceSendEvent" xml:space="preserve">
    <value>Send event: [{0}]. SendId: [{1}].</value>
  </data>
  <data name="DefaultLogger_TraceCancelEvent" xml:space="preserve">
    <value>Cancel event. SendId: [{0}].</value>
  </data>
  <data name="DefaultLogger_TraceStartInvoke" xml:space="preserve">
    <value>Start invoke. InvokeId: [{0}].</value>
  </data>
  <data name="DefaultLogger_TraceCancelInvoke" xml:space="preserve">
    <value>Cancel invoke. InvokeId: [{0}].</value>
  </data>
  <data name="Exception_NamedPipeIoProcessorMessageSizeHasWrongValueOrMissed" xml:space="preserve">
    <value>Message size has wrong value or missed. Size: {0} bytes.</value>
  </data>
  <data name="Exception_NamedPipeIoProcessorMessageReadPartially" xml:space="preserve">
    <value>Message read partially. {0} of {1} bytes.</value>
  </data>
  <data name="Exception_EventDispatcherNotFound" xml:space="preserve">
    <value>Event dispatcher not found.</value>
  </data>
  <data name="Exception_UnsupportedClass" xml:space="preserve">
    <value>RedirectXmlResolver not supported class: {0}.</value>
  </data>
  <data name="Exception_NestingReachedLevelInclusion" xml:space="preserve">
    <value>Nesting level reached, probably circular inclusion.</value>
  </data>
  <data name="Exception_XmlResolverGetEntity" xml:space="preserve">
    <value>An exception has occurred during GetEntity call to XmlResolver.</value>
  </data>
  <data name="Exception_XmlResolverReturnedNull" xml:space="preserve">
    <value>XmlResolver returned null.</value>
  </data>
  <data name="Exception_IndocumentReferencesNotSupported" xml:space="preserve">
    <value>XIncludeReader does not support in-document references.</value>
  </data>
  <data name="Exception_InvalidURI" xml:space="preserve">
    <value>Invalid URI '{0}'.</value>
  </data>
  <data name="Exception_UnknownParseAttrValue" xml:space="preserve">
    <value>Unknown 'parse' attribute value: '{0}'.</value>
  </data>
  <data name="Exception_UnresolvableURI" xml:space="preserve">
    <value>Unable to resolve URI reference '{0}'.</value>
  </data>
  <data name="Exception_XIncludeExceptionLocationLinePosition" xml:space="preserve">
    <value>{0} Location: {1}, Line {2}, Position {3}.</value>
  </data>
  <data name="Exception_XIncludeExceptionLocation" xml:space="preserve">
    <value>{0} Location: {1}.</value>
  </data>
  <data name="Exception_XIncludeExceptionLinePosition" xml:space="preserve">
    <value>{0} Line {1}, Position {2}.</value>
  </data>
  <data name="Exception_LoadingExternalResourcesDoesNotSupported" xml:space="preserve">
    <value>Loading external resources does not supported. Derive class from ScxmlXmlResolver and pass instance of it to ScxmlDirector.</value>
  </data>
  <data name="Exception_AccessToIOBoundThreadsDenied" xml:space="preserve">
    <value>Access to IO bound threads denied.</value>
  </data>
  <data name="Exception_StartingStateMachineDenied" xml:space="preserve">
    <value>Starting State Machine denied.</value>
  </data>
  <data name="Exception_AccessDeniedPermissionRequired" xml:space="preserve">
    <value>Access denied. Permission [{0}] required.</value>
  </data>
  <data name="ErrorMessage_SessionIdOrSessionIdExprMustBeSpecified" xml:space="preserve">
    <value>[sessionId] or [sessionIdExpr] must be specified.</value>
  </data>
  <data name="Exception_UnknownTypeForSerialization" xml:space="preserve">
    <value>Unknown type for serialization.</value>
  </data>
  <data name="Exception_NotExpectedTokenType" xml:space="preserve">
    <value>Not expected token type.</value>
  </data>
  <data name="Exception_UndefinedValueNotAllowed" xml:space="preserve">
    <value>Undefined value not allowed.</value>
  </data>
  <data name="Exception_CycleReferenceDetected" xml:space="preserve">
    <value>Cycle reference detected.</value>
  </data>
  <data name="Exception_DataFormatNotSupported" xml:space="preserve">
    <value>Data format not supported.</value>
  </data>
  <data name="Exception_TargetIsNotDefined" xml:space="preserve">
    <value>Target is not defined</value>
  </data>
  <data name="Exception_FoundMoreThenOneInterfaceToListen" xml:space="preserve">
    <value>Found more then one interface to listen.</value>
  </data>
  <data name="Exception_CantMatchNetworkInterfaceToListen" xml:space="preserve">
    <value>Can't match network interface to listen.</value>
  </data>
  <data name="Exception_KeyShouldNotBeEmpty" xml:space="preserve">
    <value>Key should not be empty</value>
  </data>
  <data name="Exception_OriginTypeMustBeProvidedInIoProcessorEvent" xml:space="preserve">
    <value>OriginType must be provided in ioProcessorEvent.</value>
  </data>
</root>